# NAQ Configuration - Docker Environment
# Generated by NAQ CLI
#
# This configuration is optimized for Docker/containerized deployments:
# - Uses environment variables for all external dependencies
# - Assumes NATS server is in a separate container
# - Logs to stdout for container log collection
# - Health check friendly settings
# - Graceful shutdown handling

nats:
  servers:
    # Primary NATS server (required)
    - ${NATS_URL:nats://nats:4222}
    # Optional backup servers
    # - ${NATS_BACKUP_1:nats://nats-2:4222}
    # - ${NATS_BACKUP_2:nats://nats-3:4222}
  
  client_name: ${NAQ_CLIENT_NAME:naq-worker}
  max_reconnect_attempts: 10
  reconnect_time_wait: 2.0
  connection_timeout: 15.0
  drain_timeout: 30.0     # Graceful shutdown time
  flush_timeout: 5.0
  ping_interval: 60.0
  max_outstanding_pings: 3
  
  # Authentication via environment
  auth:
    username: ${NATS_USER}
    password: ${NATS_PASS}
    # token: ${NATS_TOKEN}  # Alternative to username/password
  
  # TLS settings for secure deployments
  tls:
    enabled: ${NATS_TLS_ENABLED:false}
    cert_file: ${NATS_TLS_CERT:/etc/naq/tls/client.crt}
    key_file: ${NATS_TLS_KEY:/etc/naq/tls/client.key}
    ca_file: ${NATS_TLS_CA:/etc/naq/tls/ca.crt}

queues:
  default: ${NAQ_DEFAULT_QUEUE:main}
  prefix: ${NAQ_PREFIX:naq}
  configs:
    # Configure specific queues if needed
    ${NAQ_DEFAULT_QUEUE:main}:
      ack_wait: ${NAQ_ACK_WAIT:60}
      max_deliver: ${NAQ_MAX_DELIVER:3}
      max_ack_pending: ${NAQ_MAX_ACK_PENDING:1000}

workers:
  # Scale workers based on container resources
  concurrency: ${NAQ_CONCURRENCY:10}
  heartbeat_interval: ${NAQ_HEARTBEAT_INTERVAL:30}
  ttl: ${NAQ_WORKER_TTL:120}
  max_job_duration: ${NAQ_MAX_JOB_DURATION:3600}
  shutdown_timeout: ${NAQ_SHUTDOWN_TIMEOUT:30}
  pools: {}  # Define pools via environment if needed

scheduler:
  enabled: ${NAQ_SCHEDULER_ENABLED:true}
  lock_ttl: ${NAQ_SCHEDULER_LOCK_TTL:60}
  lock_renew_interval: ${NAQ_SCHEDULER_RENEW_INTERVAL:30}
  max_failures: ${NAQ_SCHEDULER_MAX_FAILURES:5}
  scan_interval: ${NAQ_SCHEDULER_SCAN_INTERVAL:5.0}

events:
  enabled: ${NAQ_EVENTS_ENABLED:true}
  batch_size: ${NAQ_EVENT_BATCH_SIZE:200}
  flush_interval: ${NAQ_EVENT_FLUSH_INTERVAL:2.0}
  max_buffer_size: ${NAQ_EVENT_MAX_BUFFER:20000}
  
  # Use separate event storage if available
  storage_url: ${NAQ_EVENT_STORAGE_URL}
  subject_prefix: ${NAQ_EVENT_SUBJECT_PREFIX:naq.jobs.events}
  
  stream:
    name: ${NAQ_EVENT_STREAM_NAME:NAQ_JOB_EVENTS}
    max_age: ${NAQ_EVENT_MAX_AGE:7d}
    max_bytes: ${NAQ_EVENT_MAX_BYTES:1GB}
    replicas: ${NAQ_EVENT_REPLICAS:1}
  
  filters:
    exclude_heartbeats: ${NAQ_EXCLUDE_HEARTBEATS:true}
    min_job_duration: ${NAQ_MIN_JOB_DURATION:100}

results:
  ttl: ${NAQ_RESULT_TTL:604800}        # 7 days default
  cleanup_interval: ${NAQ_CLEANUP_INTERVAL:3600}  # 1 hour
  kv_bucket: ${NAQ_RESULT_BUCKET:naq_results}

serialization:
  job_serializer: ${NAQ_SERIALIZER:pickle}
  compression: ${NAQ_COMPRESSION:false}
  json:
    encoder: ${NAQ_JSON_ENCODER:json.JSONEncoder}
    decoder: ${NAQ_JSON_DECODER:json.JSONDecoder}

logging:
  # Container-friendly logging
  level: ${NAQ_LOG_LEVEL:INFO}
  format: ${NAQ_LOG_FORMAT:json}       # Structured for log aggregation
  file: null                          # Always log to stdout in containers
  max_size: 100MB                     # Not relevant for stdout
  backup_count: 0                     # Not relevant for stdout
  to_file_enabled: false              # Force stdout logging

# Environment overrides for different deployment modes
environments:
  # Development container
  development:
    name: development
    overrides:
      logging.level: DEBUG
      logging.format: text
      workers.concurrency: 2
      events.batch_size: 10
      
  # Production container
  production:
    name: production
    overrides:
      logging.level: INFO
      logging.format: json
      workers.concurrency: 20
      events.batch_size: 500
      events.flush_interval: 1.0
      
  # Sidecar container (minimal processing)
  sidecar:
    name: sidecar
    overrides:
      logging.level: WARNING
      workers.concurrency: 1
      events.enabled: false
      scheduler.enabled: false
      
  # High-throughput container
  high_throughput:
    name: high_throughput
    overrides:
      workers.concurrency: 50
      events.batch_size: 1000
      events.flush_interval: 0.5
      results.ttl: 86400     # Shorter retention for high volume