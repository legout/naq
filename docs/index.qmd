---
title: "NAQ - NATS Asynchronous Queue"
---

[![PyPI version](https://badge.fury.io/py/naq.svg)](https://badge.fury.io/py/naq)
[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/legout/naq/blob/main/LICENSE)
[![Python version](https://img.shields.io/badge/python-3.12%2B-blue.svg)](https://www.python.org/downloads/release/python-3120/)

**NAQ** is a simple, asynchronous job queueing library for Python, inspired by [RQ (Redis Queue)](https://python-rq.org/), but built entirely on top of [NATS](https://nats.io/) and its JetStream persistence layer.

It allows you to easily enqueue Python functions to be executed asynchronously by worker processes, leveraging the power and resilience of NATS JetStream for message persistence and delivery.

## Get Started

Ready to dive in? Check out the [**Quickstart Guide**](quickstart.qmd) to get your first worker up and running in minutes.

## Key Features

*   **Simple API**: Familiar and easy-to-use API, similar to RQ.
*   **Asynchronous Core**: Built with `asyncio` and `nats-py` for high performance.
*   **Persistent & Reliable**: Uses NATS JetStream for robust job persistence and guaranteed delivery.
*   **Event Logging & Monitoring**: Comprehensive event system for tracking job lifecycles and building reactive applications.
*   **Scheduled & Recurring Jobs**: Supports cron-style, interval-based, and one-time scheduled tasks.
*   **Job Dependencies**: Create complex workflows by defining dependencies between jobs.
*   **Automatic Retries**: Configurable retry mechanism with exponential backoff for failed jobs.
*   **Web Dashboard**: An optional, real-time dashboard for monitoring queues, workers, and jobs.
*   **CLI**: A powerful command-line interface for managing your queues and workers, including real-time event monitoring.